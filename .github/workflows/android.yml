name: Android CI

on:
  push:
    branches:
      - '*'
      - '!l10n_dev'

jobs:
  build:

    if: ${{ false }}

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 100

    - name: Fetch all tags
      run: git fetch origin +refs/tags/*:refs/tags/*

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        java-package: jdk
        distribution: 'adopt'
        cache: gradle

    - name: Validate gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Decrypt secret
      run: |
        gpg -d --passphrase "${{ secrets.FROST_TAR_SECRET }}" --batch "files/frost_github.tar.gpg" > "files/frost_github.tar"
        tar xvf files/frost_github.tar -C files

    - name: Checkout Gradle Build Cache
      if: ${{ steps.self_hosted.outputs.FLAG != 'self-hosted' }}
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          !~/.gradle/wrapper/dists/**/gradle*.zip
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Android Git Version
      run: ./gradlew --quiet androidGitVersion

    - name: Check and Test
      run: ./gradlew spotlessCheck lintReleaseTest testReleaseUnitTest

    - name: Assemble
      run: ./gradlew assembleReleaseTest

    - name: Rename Test APK
      run: |
        mv app/build/outputs/apk/releaseTest/Frost-releaseTest.apk app/build/outputs/apk/releaseTest/Frost-releaseTest-${{ github.run_number }}.apk
        echo "Produced Frost-releaseTest-${{ github.run_number}}.apk"

    - name: Upload Test APK
      uses: actions/upload-artifact@v2.2.4
      with:
        name: Frost ReleaseTest v${{ github.run_number }}
        path: app/build/outputs/apk/releaseTest/Frost-releaseTest-${{ github.run_number }}.apk
        if-no-files-found: error

  release-test:

    runs-on: ubuntu-latest

#    needs: build

    env:
      GITHUB_TOKEN: ${{ secrets.TEST_RELEASE_GITHUB_API_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: AllanWang/Frost-for-Facebook-APK-Builder
        token: ${{ env.GITHUB_TOKEN }}

    # Contiguous to release IDs from Travis builds
    - name: Current Version
      run: |
        CURR_ID=$(( ${{ github.run_number }} + 2914 ))
        echo "RELEASE_ID_NUMBER=${CURR_ID}" >> $GITHUB_ENV

    - name: Prev Version
      run: |
        PREV_ID=$(cat Frost.txt | grep -o -E '[0-9]'+)
        SHOULD_RELEASE=$(( ${{ env.RELEASE_ID_NUMBER }} > $PREV_ID ))

#    - name: Should Release
#      run: |
#        echo "Prev $PREV_ID Now ${{ RELEASE_ID_NUMBER }} Should Release $SHOULD_RELEASE"
#        echo "SHOULD_RELEASE=${SHOULD_RELEASE}" >> $GITHUB_ENV

#    - name: Update File
#      if: ${{ env.SHOULD_RELEASE }}
#      run: echo "Frost v${{ env.RELEASE_ID_NUMBER }}" > Frost.txt
#
#    - name: Create Commit
#      if: ${{ env.SHOULD_RELEASE }}
#      uses: EndBug/add-and-commit@v7
#      with:
#        message: 'Github Action ${{ env.RELEASE_ID_NUMBER }} [skip ci]'
#        tag: 'v${{ env.RELEASE_ID_NUMBER }}'
#
#    - name: Create Release
#      if: ${{ env.SHOULD_RELEASE }}
#      uses: ncipollo/release-action@v1
#      with:
#        artifacts: "Frost.txt"
#        body: |
#          Automatic Release v${{ env.RELEASE_ID_NUMBER }} for branch `${{ github.ref }}`
#          https://github.com/${{ github.repository }}/commit/${{ github.sha }}
#        token: ${{ env.GITHUB_TOKEN }}





